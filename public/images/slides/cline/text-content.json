[
  "音楽CLINE\nMCP SERVER MIDI COMPOSER\nMCP",
  "Yu Otsubo (tubone24)\nゆるふわエンジニア@KAG\n妻と犬の二人暮らし。\nアスパラが苦手ですが、春になると\n飲食店アスパラを使ったメニュー\nばっかりでうんざりしている。\nW\nho are you?\n$ npx tubone24",
  "MCPとは、AI（人工知能）モデルと外部\nのデータソースやツールを接続するための\n標準化されたオープンプロトコルです。\nMCPは「Model Context Protocol」の略\n称で、AIアプリケーションのためのUSB-C\nポートのような役割を果たします。\nWhat is a MCP?\nこれは割愛",
  "DEMO",
  "",
  "",
  "",
  "",
  "これだけ\n（暗すぎる）",
  "Conclusion\n音楽生成はテキスト生成系の\nLLMではなく、\n素直に音楽生成AI使おう。",
  "どういう仕組み？\nCline\n(MCPクライアント）\nAmazon\u0001Bedrock\n(Claude\u00013.7\u0001sonnet)\nMCP\u0001Server\n\u0001\n(stdio\u0001on\u0001npm)\nmusic-writer-js\nLLM呼び出し\nツールとして呼び出し",
  "",
  "自作して\nわかったこと",
  "注意\n今回はMCPのStdIOのみ\nToolsに関して\nのみ。\npromptsとかも面白そうではある",
  "Cline\n(MCPクライアント）\nAmazon\u0001Bedrock\n(Claude\u00013.7\u0001sonnet)\nMCP\u0001Server\n\u0001\n(stdio\u0001on\u0001npm)\nMCP:\u0001/tools/list\nMCP:\u0001initialize\ncline_mcp_settings.json\n読み込み\n対応プロコトルバージョン返却\nツール情報返却・登録\nユーザー指示+ツール情報を送信\nツールが必要か判断\nツール使ってちょ\nMCP:\u0001tools/call\nツール結果\ntool_use,\u0001function_callingとして\nLLMに結果返す\nSequences\nざっくりシーケンス書くと\nこんな感じ\n(notificationなど省略)\nMCPに規定されるメソッドの\nハンドラーを\nMCPサーバーコードに表現\nしていく\nStdIOなら直接JSをnodeから\n実行すれば結構面白いことがわかる\n(以降はよくあるAIエージェント処理)",
  "MCP Server STDIO",
  "Cline\n(MCPクライアント）\nAmazon\u0001Bedrock\n(Claude\u00013.7\u0001sonnet)\nMCP\u0001Server\n\u0001\n(stdio\u0001on\u0001npm)\nMCP:\u0001/tool/lists\nMCP:\u0001initialize\ncline_mcp_settings.json\n読み込み\n対応プロコトルバージョン返却\nツール情報返却・登録\nユーザー指示+ツール情報を送信\nツールが必要か判断\nツール使ってちょ\nMCP:\u0001tools/call\nツール結果\ntool_use,\u0001function_callingとして\nLLMに結果返す\n(以降はよくあるAIエージェント処理)",
  "Input Schema\nListToolsRequestSchemaで\n次のようにスキーマを正しく\n指定してあげればツール引数の\n構文不正で落ちることはほぼない。\nClaudeさまさま。",
  "Input Schema\nただし、ツール引数が長くなれば\nなるほど、LLMのMaxTokenに\nひっっかりやすくなる\n引っかかった場合は最初から\nやり直しになるので注意\n（ループを作っちゃう原因に）",
  "Input Schema\n長いInputならClineであれば\n一度ファイルに\n出力しそちらを参照するように\nするとよさそう。\nInputSchemaで\n「どちらか一方を使ってね」\nという指定も可能(oneOf)",
  "Cline\n(MCPクライアント）\nAmazon\u0001Bedrock\n(Claude\u00013.7\u0001sonnet)\nMCP\u0001Server\n\u0001\n(stdio\u0001on\u0001npm)\nMCP:\u0001/tool/lists\nMCP:\u0001initialize\ncline_mcp_settings.json\n読み込み\n対応プロコトルバージョン返却\nツール情報返却・登録\nユーザー指示+ツール情報を送信\nツールが必要か判断\nツール使ってちょ\nMCP:\u0001tools/call\nツール結果\ntool_use,\u0001function_callingとして\nLLMに結果返す\n(以降はよくあるAIエージェント処理)",
  "Output files\nファイルを出力させるとき、\nMCPサーバーには現在動いている\nディレクトリ情報がわからない。\nなので、rootディレクトリにファイルを\n作ったりしちゃう\n一応Feature Requestは上がっている。\nhttps://github.com/cline/cline/discussions/2635",
  "Output files\nなので絶対パスでファイルを\n指定させると安定する。\nこちらもInputSchemaで指示を\n通すことができる。",
  "Conclusion\nMCPのLTのために\n変なServer作ってしまった。\n自作MCP Serverで\nおもしろそうなアイディアが\n浮かばないので\n一緒に考えてほしいです！！",
  "T\nH\nA\nN\nK\n \nY\nO\nU\nSee you\nnext LT!\nF\nO\nR\n \nL\nI\nS\nT\nE\nN\nI\nN\nG\n!"
]