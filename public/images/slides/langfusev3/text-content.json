[
  "LangfuseV3を安くしたい\nYu Otsubo\n(tubone)",
  "Call me\n \ntubone\n \nYu Otsubo\n（ゆるふわエンジニア）\n普段は\nAI\nエージェントなプロダクト\nを作ってます。\nそろそろ\nLangfuser\n歴\n1\n年。\n \n  \n妻と犬と遊ぶのが趣味。",
  "M\ny\n \np\ne\nt\n:\n \nM\nu\ng\ni",
  "Langfuse V3?\nみなさんは\nLangfuse V3\nに\nアップデートしてますか？",
  "Langfuse V3?\nしているよ！\nするつもりないよ！\nCloud\n版だよ！",
  "What is Langfuse V3?",
  "Langfuse V3?\nしているよ！\nするつもりないよ！\nCloud\n版だよ！",
  "Langfuse V3?\nしているよ！\nするつもりないよ！\nCloud\n版だよ！",
  "Langfuse V3?\nしているよ！\nするつもりないよ！\nCloud\n版だよ！",
  "Why NOT\nLangfuse v3?\nなんで皆さん\nLangfuse V3\nにしな\nいのでしょうか\n...?",
  "C\nOST\n",
  "コストが高くなってます。",
  "Why NOT\nLangfuse v3?\nコストが下がればみんな使って\nくれるはず。",
  "おさらい",
  "Clickhouse Table Data\nAWS App Runner\nLLMアプリケーション\nなど\nLangfuse Web\nAWS管理VPC\nトレースの記録\nプロンプトの呼び出し\n評価Webシステム\nGitHub Enterprise\nGitHub Actions\nLangfuse Worker\nClickhouse\nService\nService\nContainer\nAmazon\n  \nECS Cluster\nContainer\nAmazon EFS\nAmazon Aurora Serverless V2\nAmazon ElastiCache\nAmazon S3\nLangfuse VPC\nLangfuse OLTP\nNamespace\nService\nlangfuse.local\nAWS Cloud Map\nclickhouse.langfuse.local\nLangfuse Queue\nAmazon S3\nLangfuse Event Bucket\nLangfuse Media Bucket\nAmazon S3\nClickhouse Meta Data\nLangfuse基盤\n開発者\nプロンプトの編集\nトレースの分析\nデータセットの管理\nドメイン\nエキスパート\nプロンプトの本番適用\nRagasでのデータセット評価\n機能・顧客ごとのコスト・利用状況管理\nTraces/MediaAPIからMedia、生成の入出力を取得\nScoresAPIで評価を記録\nコスト利用状況を日次で通知",
  "",
  "Clickhouse Table Data\nAWS App Runner\nLangfuse Web\nAWS管理VPC\nLangfuse Worker\nClickhouse\nService\nService\nContainer\nAmazon\n  \nECS Cluster\nContainer\nAmazon EFS\nAmazon Aurora Serverless V2\nAmazon ElastiCache\nAmazon S3\nLangfuse VPC\nLangfuse OLTP\nNamespace\nService\nlangfuse.local\nAWS Cloud Map\nclickhouse.langfuse.local\nLangfuse Queue\nAmazon S3\nLangfuse Event Bucket\nLangfuse Media Bucket\nAmazon S3\nClickhouse Meta Data\nLangfuse基盤",
  "A lot of ECS\nECS\nが多いですよね。\nここをなんとかしたいですよね。",
  "use Graviton\nARM64\nで動かすことで\nCPU\n料金を抑えることができます。",
  "Clickhouse Table Data\nAWS App Runner\nLangfuse Web\nAWS管理VPC\nLangfuse Worker\nClickhouse\nService\nService\nContainer\nAmazon\n  \nECS Cluster\nContainer\nAmazon EFS\nAmazon Aurora Serverless V2\nAmazon ElastiCache\nAmazon S3\nLangfuse VPC\nLangfuse OLTP\nNamespace\nService\nlangfuse.local\nAWS Cloud Map\nclickhouse.langfuse.local\nLangfuse Queue\nAmazon S3\nLangfuse Event Bucket\nLangfuse Media Bucket\nAmazon S3\nClickhouse Meta Data\nLangfuse基盤\nここ",
  "Langfuse, Langfuse worker, ClickHouse\nすべて\nIntel x86, ARM64\n両アーキテクチャに対応！\nARM\n（\nGraviton2\n）プロセッサーは、\nIntel x86\nと比較して約\n20%\nの\nコスト削減が可能です",
  "C\nl\ni\nc\nk\nh\no\nu\ns\ne\n料金を抑えられるか\n少し考えてみる\nClickHouse\nを制するものは\nLangfuse\nを制する",
  "Clickhouse Table Data\nAWS App Runner\nLangfuse Web\nAWS管理VPC\nLangfuse Worker\nClickhouse\nService\nService\nContainer\nAmazon\n  \nECS Cluster\nContainer\nAmazon EFS\nAmazon Aurora Serverless V2\nAmazon ElastiCache\nAmazon S3\nLangfuse VPC\nLangfuse OLTP\nNamespace\nService\nlangfuse.local\nAWS Cloud Map\nclickhouse.langfuse.local\nLangfuse Queue\nAmazon S3\nLangfuse Event Bucket\nLangfuse Media Bucket\nAmazon S3\nClickhouse Meta Data\nLangfuse基盤\nここ",
  "",
  "脱ECS...?",
  "S\no\nr\nr\ny\n.\n.\n.\n残念ながら\nLambda\n残念ながら\nLambda\nClickHouse\nは\nClickHouse\nは\nLangfuse\nでは使えません。\nLangfuse\nでは使えません。",
  "L\na\nm\nb\nd\na\nC\nl\ni\nc\nk\nh\no\nu\ns\ne\nS3\nへの保存は\nClickHouse\nの\nTable function\nで\nObject path\nを仮想テーブルとして実施\nメタデータの保存先がないため、\nLangfuse\nの\nテーブル構成とマッチしない\nそもそも\nNative Port\nに対応してないので\nマイグレーションはできない\n(\n利用するには\nClickHouse server\nを\n動かなさいといけないよ）",
  "おや...?",
  "S\nt\no\nr\na\ng\ne\n \nP\no\nl\ni\nc\ny\nClickHouse\nは\nS3\nを\nCold Storage\nとして\n利用することができることが\nLambda\nClickHouse\nの実装でわかりました。",
  "C\nl\ni\nc\nk\nh\no\nu\ns\ne\n \nD\no\nc\nu\nm\ne\nn\nt\ns",
  "W\nh\na\nt\n \ni\ns\n \nS\n3\n \nS\nt\no\nr\na\ng\ne\nClickHouse\nのデータには主に２つの構成要素があります。\n(log\nとかは除く\n)\nテーブルデータ\nメタデータ\nhttps://clickhouse.com/docs/operations/storing-data",
  "W\nh\na\nt\n \ni\ns\n \nS\n3\n \nS\nt\no\nr\na\ng\ne\nテーブルデータ\nメタデータ\nhttps://clickhouse.com/docs/operations/storing-data\nこっちをS3に\nこっちをS3に\nClickHouse\nのデータには主に２つの構成要素があります。\n(log\nとかは除く\n)",
  "H\no\nw\n \nt\no\n \nS\n3\n \nS\nt\no\nr\na\ng\ne\nClickhouse\nAmazon EFS\nテーブルデータ\nメタデータ\nClickhouse\nAmazon EFS\nテーブルデータ\nメタデータ\nAmazon S3\nBefore\nAfter\nテーブルデータはメタデータと同様通常はブロックストレージに配置\nされますが、オブジェクトストレージを選択できます。",
  "Merge tree config!\nClickhouse\nの\nconfig\nで\nStorage\npolicy\nが設定できます。\n加えて、\nLangfuse\nが使っている\nMergeTree\nで\nS3\nを\n使うには\nStorage policy\nを設定し\nて、\nMergeTree\nの\nStorage policy\nに\n作成したポリシーを適用すれば\nOK\n！",
  "D\ne\ne\np\n \nD\ni\nv\ne\n \nM\ne\nr\ng\ne\n \nt\nr\ne\ne\nClickhouse\nの\nMerge Tree\nの詳細については\n...!\n我がブログへ！！\nLangfuse\nの奥深い実装を感じましょう\n...\nhttps://tubone-project24.xyz/",
  "S\na\nv\ne\n \nd\ni\ns\nk\n!\n!\n!",
  "C\nl\ni\nc\nk\nh\no\nu\ns\ne\nEFS\nの料金を抑えられそう！\n(EFS\nは\nEBS\nのおよそ\n3\n倍の値段\n)",
  "H\no\nw\n \nt\no\n \nS\n3\n \nS\nt\no\nr\na\ng\ne\nDocker Image\n化して起動できるようにしてみました。\n$ docker pull ghcr.io/tubone24/clickhouse-server-s3disk:latest",
  "CAUTION!!!\nS3\nへの通信がエグいことになるので\n絶対に\nS3 VPC Endpoint\nを入れて！",
  "Noooooooo!!!!\nS3化した直後、とんでもないNatGateway-Bytesが！！！！",
  "C\no\nl\nd\n \ns\nt\no\nr\na\ng\ne\n \ni\ns\n \nj\nu\ns\nt\n“\nC\no\nl\nd\n \nS\nt\no\nr\na\ng\ne\n”\n \n当たり前といえば当たり前ですが。\nCold Storage\nのみで運用すると\n遅いです\n...\n。\nCache storage\n設定など\n正しくいれることを\n強くおすすめし\nます。",
  "C\nl\ni\nc\nk\nh\no\nu\ns\ne\n \nA\nr\nc\nh\ni\nv\ne\ni\ns\n \ng\no\no\nd\n意外なところで運用コストがかかるの\nで、トータルしたらあまりおすすめの\n構成ではないかも。\nClickhouse\nのデータ圧縮効率は\nめちゃくちゃいいので\nEFS\nのコストは\nあまり気にならないかもしれない。",
  "じゃあやらなくて\nいいじゃん",
  "そうです",
  "W\nh\ny\nC\nh\na\nl\nl\ne\nn\ng\ne\n?\nなぜここまでやるのか\n...\n。\nただ一つ、楽しいからである。\nこれだからやめられないね！\n一緒にチャレンジする仲間を\n増やしたいです！切実に。",
  "Thank you for\nWatching"
]