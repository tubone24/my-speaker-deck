[
  "",
  "\u0000\n手\n\u0000\n\u0000\n\u0000\n手\n\u0000\n\u0000\n原因はAWSではありませんでした...。\n原因はAWSではありませんでした...。\nNW-JAWSなのにすみません。\nNW-JAWSなのにすみません。",
  "　名 前\nYu Otsubo\n　所 属\nKDDIアジャイル開発センター(KAG)\n　職種\nゆるふわエンジニア\n　SNS\n@meitante1conan\n　その他\n妻と二人暮らしでしたが\n最近犬をお迎えしました！\nなので最近はエンジニアリングのつぶやき少なめ\n自 己 紹 介\n00\n0\n0",
  "どんな問題が発生したの？\n1\n.\nCl ou dFr ont が返す謎のエラー\n2\n.\nCl ou dWat c h  Appl i c at i o n\nSi gnal s でボトルネックを調べる\n3\n.\nごん. . . おまえだったのか\n力\n4\n.\n最後に\n5\n.\n本 日 の ア ジ ェ ン ダ",
  "ど ん な 問 題 が 発 生\nど ん な 問 題 が 発 生\nし た の ？\nし た の ？\nファイルのアップロードに失敗するよ....?\n01\n0\n1",
  "どんなアプリを開発しているの？\nPDFとかパワポのファイルを\nアップロードして\n、\n非常に重たい処理並列で実行、結果を画面に表示させる\n業務アプリケーションです。\nど ん な 問 題 が 発 生 し た の ？\n01\n0\n1\nこの場で詳細話せないのが悔しい...。",
  "ファイルアップロードが\n待っても完了しないよ！\n開発チームで確認したところ確かにAWS環境で再現。\nただし、\nローカルでは発生しない\n。\n「ペロッこれはインフラ起因！」\nど ん な 問 題 が 発 生 し た の ？\n01\n0\n1",
  "01\n0\n1\n簡単な構成をおさらいしましょう\nど ん な 問 題 が 発 生\nし た の ？\nちょっと複雑な構成ですが、追って行きましょう！\nみなさんもどこが原因か想像しながらお聞きください！",
  "01\n0\n1\nど ん な 問 題 が 発 生\nし た の ？\nCloudFront\nCloudFrontでフロントエンドアプリケーションを配信\nビヘイビアでバックエンドAPIにルーティングしている",
  "01\n0\n1\nど ん な 問 題 が 発 生\nし た の ？\nフロントはReact\nフロントエンドはReactで作成。\nSPAで動きます。",
  "01\n0\n1\nど ん な 問 題 が 発 生\nし た の ？\nS3でホスティング\nCloudFront + S3のよくある構成",
  "01\n0\n1\nど ん な 問 題 が 発 生\nし た の ？\nALB\nFastAPIへのアクセスのフロント面です。\nカスタムヘッダー+\nマネージドプレフィックスリストでセキュアに",
  "01\n0\n1\nど ん な 問 題 が 発 生\nし た の ？\nバックエンドは\nFastAPI\nFastAPIはルーティングを主に実施。\nU v i c o r n\nのお陰で軽量爆速！\n重たい処理は後段のWorkerが実施します。",
  "01\n0\n1\nど ん な 問 題 が 発 生\nし た の ？\nECS Fargate\n特に取り立てて話すことなし",
  "01\n0\n1\nど ん な 問 題 が 発 生\nし た の ？\nRedisでWorkerへ\nJob登録\nCeleryのBroker/Result Backendとして利用しています。\nResult Backendを兼ねることができるので地味に便利。",
  "01\n0\n1\nど ん な 問 題 が 発 生\nし た の ？\nCeleryでWorker構築\n重たい処理はこちらで\nCeleryのコーディング体験半端なくいいですよ！！！\n普通のPython書いたら即Worker化できます。おすすめ。\n一つあたりのWorker処理はとても小さいのでThread Poolを\nGevent\nで設定",
  "CloudFrontが返す謎の\nCloudFrontが返す謎の\nエラー\nエラー\nどうやらCloudFrontのバックエンドがタイムアウトし\nているらしい...。つまり...?\n02\n0\n2",
  "ファイルが重たいから...?\nコンテナが小さいから...?\nDevtoolsでAPIのレスポンスを見てみよう...\n「ん！？」\nC l o u d F r o n t が 返 す\n謎 の エ ラ ー\n02\n0\n2",
  "CloudFrontが返す\n謎のエラー\nCloudFrontがエラーを吐いている！\n02\n0\n2\nError from cloudfrontが出ている！！！！",
  "CloudFrontが返す\n謎のエラー\nCloudFrontがエラーを吐いている！\n02\n0\n2\nでも特にアプリのログにエラーは出てない。。。\nなにかタイムアウトに引っかかっている？\nインフラ臭いですね。",
  "02\n0\n2\nC l o u d F r o n t が 返 す\n謎 の エ ラ ー\nCloudFront\nCloudFrontにはバックエンドの\nタイムアウトがある。\n最大60秒\nこれですね....。",
  "CloudFrontが返す\n謎のエラー\nALBの設定を見直してみる\n02\n0\n2\nALB\n一方、ALBにもタイムアウトはあるが、\n最大4000秒\nに伸ばしても変わらず。\nALBのヘルスチェックも問題ない...",
  "何かがとても遅くて\n何かがとても遅くて\nCloudFrontで60秒タイムアウト\nCloudFrontで60秒タイムアウト\nボトルネック調査！！\nボトルネック調査！！\nCloudFrontが返す\n謎のエラー\n02\n0\n2\n私\nは\nス\nト\nレ\nー\nト\nネ\nッ\nク\n私はストレートネック",
  "CloudWatch\nCloudWatch\nApplication Signalsで\nApplication Signalsで\nボトルネックを調べる\nボトルネックを調べる\nおや...?他のAPIも遅いぞ...? つまり...?\n03\n0\n3",
  "CloudWatch Application\nSignalsでボトルネックを調べる\n03\n0\n3\nアプリケーション全体のトレース\nするときに便利\nOpenTelemetry(OTEL)\nを活用してAWSのアプリケーションモニタリングを自動化する\n新しいサービス\nPythonは自動計装に対応！",
  "アップロードだけがタイムアウト\nすると思ったら全APIが遅い...!!!\nCloudWatch Application\nSignalsでボトルネックを調べる\n03\n0\n3\n単純なstatusしか返さない\nhealthcheckのAPIですら数秒\nかかっている。\n明らかに遅い。",
  "逆にredis/workerのスピードは\n早い。\nということは被疑箇所はFastAPIだ！\nこうして調査の旅はアプリケーション内部へ進んだ...\nCloudWatch Application\nSignalsでボトルネックを調べる\n03\n0\n3",
  "ごん...おまえだったのか\n力\nごん...おまえだったのか\n力\n私のごんは栗を持ってこず、バグを持ってきました。\n04\n0\n4",
  "\u0000\nめ\nて\n\u0000\n\u0000\n\u0000\nめ\nて\n\u0000\n\u0000\n原因はAWSではありませんでした...。\n原因はAWSではありませんでした...。\nNW-JAWSなのにすみません。\nNW-JAWSなのにすみません。",
  "ごん...おまえだったのか\n力\nGevent、お前だったのか\nGevent、お前だったのか\n04\n0\n4\nジーイベント\nジーイベント",
  "Geventとはなにか？\nGeventは、Pythonで非同期プログラミングを実現するためのネットワークライブラリで、\nGreenletという軽量な協調的マルチスレッド(コルーチン)を使用します。\nごん...おまえだったのか\n力\n04\n0\n4\nI/O待ちの多い処理では効率的に処理をこなせます。(CPU負荷の低いやつ)\nGeventはCeleryのスレッドプールで選択可能です。\nジーイベント",
  "Geventとはなにか？\ngeventは、Pythonで非同期プログラミングを実現するためのネットワークライブラリで、\ngreenletという軽量な協調的マルチスレッド(コルーチン)を使用します。\nごん...おまえだったのか\n力\n04\n0\n4\n要は小さい処理なら\nCelery Workerを高密度にできますよ\nというもの",
  "Geventとはなにか？\ngeventは、Pythonで非同期プログラミングを実現するためのネットワークライブラリで、\ngreenletという軽量な協調的マルチスレッド(コルーチン)を使用します。\nごん...おまえだったのか\n力\n04\n0\n4\n要は小さい処理なら\nCelery Workerを高密度にできますよ\nというもの\nコスト削減のため\nコ\nス\nト\n削\n減\nの\nた\nめ\n導入してました\n導\n入\nし\nて\nま\nし\nた",
  "ごん...おまえだったのか\n力\n04\n0\n4\nCelery Workerの高密度化のために導入したGevent",
  "ごん...おまえだったのか\n力\n04\n0\n4\nCelery Workerの高密度化のために導入したGevent\nFastAPIのコンテナにもpipでGeventインストール",
  "ごん...おまえだったのか\n力\n04\n0\n4\nCelery Workerの高密度化のために導入したGevent\nFastAPIのコンテナにもpipでGeventインストール\nGeventのmonkey.patch_allがライブラリ起因で適用\n非同期・Threadingの標準ライブラリがgreenlet処理に置き換え",
  "ごん...おまえだったのか\n力\n04\n0\n4\nCelery Workerの高密度化のために導入したGevent\nFastAPIのコンテナにもpipでGeventインストール\nGeventのmonkey.patch_allがライブラリ起因で適用\n非同期・Threadingの標準ライブラリがgreenlet処理に置き換え\nUvicornと競合！！　イベントループに変な形で割り込み！\n\n裡",
  "ごん...おまえだったのか\n力\n04\n0\n4\nCelery Workerの高密度化のために導入したGevent\nFastAPIのコンテナにもpipでGeventインストール\nGeventのmonkey.patch_allがライブラリ起因で適用\n非同期・Threadingの標準ライブラリがgreenlet処理に置き換え\nUvicornと競合！！　イベントループに変な形で割り込み！\nIssueも上がっていました。",
  "ごん...おまえだったのか\n力\n04\n0\n4\nCelery Workerの高密度化のために導入したGevent\nFastAPIのコンテナにもGeventのpipでインストール\nGeventのmonkey.patch_allがライブラリ起因で適用\n非同期・Threadingの標準ライブラリがgreenlet処理に置き換え\nUvicornと競合！！　イベントループに変な形で割り込み！",
  "ごん...おまえだったのか\n力\n04\n0\n4",
  "ごん...おまえだったのか\n力\n04\n0\n4",
  "解 決 方 法\nDockerfileを２つに分けて\nそれぞれ\ngeventあり\ngeventなし\nで作成した。\nたったこれだけ...。\nごん...おまえだったのか\n力\n04\n0\n4\n※細かい話ですが、MacだとGreenletの動きがまたちょっと動きが違うようで、ローカルだと再現しなかったようです。",
  "原 因 わ か ら ず\n夢 で デ バ ッ グ\n夜遅くまで調査して、\nそれでもわからなくて、\n悔しくて、\n寝ながらデバッグして、\n朝起きてperplexityに聞いて\n解決。\nごん...おまえだったのか\n力\n04\n0\n4\n喜\nび\nす\nぎ\nて\n変\nな\nタ\nイ\nポ\nし\nて\nま\nす\nね\n。\n喜びすぎて変なタイポしてますね。",
  "最 後 に\n05\n0\n5\n難しいトラブルシュートは、アプリインフラ両方を\n行ったり来たりして調べるべし。\nそれぞれに原因がありそうで、調査投げてしまうと\n時間がかかってしまう！！",
  "最 後 に\n05\n0\n5\n難しいトラブルシュートは、アプリインフラ両方を\n行ったり来たりして調べるべし。\nそれぞれに原因がありそうで、調査投げてしまうと\n時間がかかってしまう！！",
  "最 後 に\n05\n0\n5\n難しいトラブルシュートは、アプリインフラ両方を\n行ったり来たりして調べるべし。\nそれぞれに原因がありそうで、調査投げてしまうと\n時間がかかってしまう！！\nな\nろ\nう\n\u0000\nフ\nル\nス\nタ\nッ\nク\nエ\nン\nジ\nニ\nア\nな\nろ\nう\n\u0000\nフ\nル\nス\nタ\nッ\nク\nエ\nン\nジ\nニ\nア\nな\nろ\nう\n\u0000\nフ\nル\nス\nタ\nッ\nク\nエ\nン\nジ\nニ\nア\n私も精進します。。。",
  "最 後 に\n05\n0\n5",
  "最 後 に\n05\n0\n5\nちょっと\nちょっと\nちょっと\nだいぶ\n多少",
  "THANK YOU\nTHANK YOU\nご清聴ありがとうございました。\nご清聴ありがとうございました。"
]